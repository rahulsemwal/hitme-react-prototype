{"version":3,"sources":["Component/Nav/Nav.js","Component/NoNetworkFound/NoNetworkFound.js","Service/Sources.js","Service/API.js","Service/ApiProvider.js","Service/ApiParser.js","Component/Card/Card.js","Component/NewsBox/NewsBox.js","Component/App/App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","NoNetworkFound","Sources","type","@Docs","domain","format","permalink","parameters","apiKey","url","method","body","maxHitLimit","reqParser","resParser","country","category","sources","API","config","filter","o","i","ApiProvider","_this","Object","classCallCheck","this","_super","call","collection","_this2","console","log","asyncGetCall","then","res","JSON","parse","_unused","fetch","response","json","data","catch","err","error","pipe","objectSpread2","articles","map","capsule","source","name","author","title","description","urlToImage","publishedAt","content","Card","props","src","article","alt","NewsBox","service","fetchPost","apiProvider","get","methods","engine","plug","getData","result","buffer","updateState","updateHappens","nextProps","nextState","obj","updateCounter","key","setState","state","Component_Card_Card","React","Component","App","handleCheckOnline","window","navigator","onLine","handleScroll","event","scrollY","offline","addEventListener","removeEventListener","Component_Nav_Nav","Component_NoNetworkFound_NoNetworkFound","Component_NewsBox_NewsBox","Boolean","location","hostname","match","ReactDOM","render","Component_App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af90f873.chunk.js","sourcesContent":["import React from 'react';\n\nconst Nav = () => {\n\treturn (\n\t\t<div className=\"App-Nav-bar\">\n\t\t\t<span>ALL</span>&nbsp;&nbsp;<span>SPORTS</span>&nbsp;&nbsp;<span>BUSINESS</span>\n\t\t</div>\n\t);\n}\n\nexport default Nav;","import React from 'react'\nimport './NoNetworkFound.css'\nconst NoNetworkFound = () => (\n\t\t\t\t\t\t\t\t<div className=\"network-board\">\n\t\t\t\t\t\t\t\t\t<article className=\"card-no-nework-found\">\n\t\t\t\t\t\t\t\t\t\t<header><h3 className=\"heading\">No network found</h3></header>\n\t\t\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t\t\t<p>May be you are not connected with internet. Last upadte below. </p>\n\t\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t\t<footer></footer>\n\t\t\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\nexport default NoNetworkFound\n","//https://www.developerdrive.com/a-simple-way-to-add-free-news-content-to-your-website/\n//var feed =”http://feeds.bbci.co.uk/news/world/rss.xml”;\n// var feed =”http://rss.cnn.com/rss/edition_world.rss”;\n// var feed =”http://feeds.reuters.com/Reuters/worldNews “;\nconst Sources = [{\n  \"type\":\"newsApi\",\n  \"@Docs\":\"\",\n  \"domain\":\"https://newsapi.org\",\n  \"format\":\"https://newsapi.org/v2/{*permalink}?{parameters added with & operators}&apiKey={*Generated apiKey}\",\n  \"permalink\":[\"top-headlines\",\"everything\"],\n  \"parameters\":[\"country\",\"category\",\"sources\",\"apiKey\", \"it may be object in future\"],\n  \"apiKey\":\"c438f5b301e94324a9c5609062fe4b73\",\n  \"url\":\"/newsapi\",\n  \"method\":\"GET\",\n  \"body\":null,\n  \"maxHitLimit\":\"450\",\n  \"reqParser\":\"newsApiRequestParser\",\n  \"resParser\":\"newsApiResponseParser\"\n},{\n  \"type\":\"newsApiEntertainment\",\n  \"@Docs\":\"\",\n  \"domain\":\"https://newsapi.org\",\n  \"format\":\"https://newsapi.org/v2/{*permalink}?{parameters added with & operators}&apiKey={*Generated apiKey}\",\n  \"permalink\":[\"top-headlines\",\"everything\"],\n  \"parameters\":[{\"country\":[]},{\"category\":[\"business\",\"entertainment\"]},{\"sources\":[]},{\"apiKey\":[\"d518623f4ffd44aabfb7fbc701457dcc\"]}],\n  \"apiKey\":\"d518623f4ffd44aabfb7fbc701457dcc\",\n  \"url\":\"https://newsapi.org/v2/top-headlines?country=in&category=entertainment&apiKey=d518623f4ffd44aabfb7fbc701457dcc\",\n  \"method\":\"GET\",\n  \"body\":null,\n  \"maxHitLimit\":\"450\",\n  \"reqParser\":\"newsApiRequestParser\",\n  \"resParser\":\"newsApiResponseParser\"\n}]\nexport default Sources\n","//@@@DOCS\n//@@Collecting news/data from different sources.\nimport Sources from \"./Sources\"\nconst API = (config) => {\n  let collections = Sources.filter((o,i)=>{\n    return o.type === config.type\n  })\n  return collections[0]\n}\nexport default API\n","import API from \"./API\"\nimport ApiParser from \"./ApiParser\"\nclass ApiProvider extends ApiParser{\n  constructor(){\n    super()\n    this.collection = {type:\"newsApi\"}\n  }\n  get(config){\n    let collection = {}\n    if(config&&config.type){\n      collection = API(config)\n    }else{\n      //default\n      collection = API(this.collection)\n    }\n    this.collection = collection\n    console.log(\"current collection \", this.collection)\n    //Actual api call with fetch api, return promise\n    //CALLING API BY FETCH AS STORED IN COLLECTION\n    //PARSE RESPONSE AS PER THE GIVEN PARSER RULE IN collection\n    //RETURN PARSED DATA TO COMPONENTS\n    return this.asyncGetCall(this.collection).then((res)=>{\n      if(typeof res == 'string'){\n        try{\n          res = JSON.parse(res);\n        }catch{\n          res = {};\n        }\n      }\n      return this[this.collection.resParser](res)\n    })\n  }\n}\n\nexport default ApiProvider\n","export default class ApiParser{\n  // constructor(){}\n  //genric get call\n  asyncGetCall(config){\n    return fetch(config.url)\n    .then(function(response) {\n      return response.json()\n    })\n    .then(function(data) {\n      return data\n    })\n    .catch(function(err){\n      const error = {\n        \"error\":err\n      }\n      console.log(\"Error in network call\", err);\n      return error\n    });\n  }\n  //newsApi response parser\n  newsApiResponseParser(data){\n    let pipe = {...data}\n    pipe.articles = data.articles.map(function(o,i){\n      let capsule = {}\n      capsule.source = o.source.name\n      capsule.author = (o.author==null)?\"Anonymous\":o.author\n      capsule.title = o.title\n      capsule.description = o.description\n      capsule.url = o.url\n      capsule.urlToImage = o.urlToImage\n      capsule.publishedAt = o.publishedAt\n      capsule.content = o.content\n      return capsule\n    })\n    console.log(pipe)\n    return pipe;\n  }\n}\n","import React from 'react';\n// import LazyBox from '../LazyBox/LazyBox'\nimport './Card.css'\nconst Card = (props) => {\n  // console.log(props);\n    return (\n    \t<article className=\"card\">\n    \t\t<header>\n    \t\t\t<img className=\"thumbnail\" src={props.article.urlToImage} alt=\"Not Available\" />\n    \t\t\t<h3 className=\"heading\">{props.article.title}</h3>\n          <small className=\"source\">By: {props.article.source}</small>\n    \t\t</header>\n    \t\t<section>\n    \t\t\t<p>{props.article.description}</p>\n    \t\t</section>\n    \t\t<footer>\n    \t\t\t<p>I am footer</p>\n    \t\t</footer>\n      </article>\n    );\n}\n\nexport default Card;\n","/*\n@@DOCS\n@React 16.8 - componentWillMount, componentWillReceiveProps, componentWillUpdate must not use if you are using \"static getDerivedStateFromProps\"\n*/\nimport React from 'react'\nimport ApiProvider from '../../Service/ApiProvider'\nimport Card from '../Card/Card'\nimport \"./NewsBox.css\"\nclass NewsBox extends React.Component{\n  constructor(props){\n    super(props);\n    this.apiProvider = new ApiProvider()\n    this.state = {\n      \"buffer\": {\"articles\":[]},\n      \"updateCounter\":0,\n    }\n  }\n  // static getDerivedStateFromProps(nextProps,state){\n  //   console.log(\"inside getDerivedStateFromProps always call before render method\", nextProps, state)\n  //   return { \"updateCounter\": nextProps.data }\n  // }\n  // componentWillMount(){\n  //   // console.log(\"inside willMount, called first time only before render\")\n  //   console.log(\"=============================================================\")\n  //   this.methods.engine(\"play\",this.state)\n  // }\n  componentDidMount(){\n    console.log(\"inside componentDidMount, called first time only after render\")\n    this.methods.engine(\"play\",this.state)\n  }\n  componentWillUnmount(){\n    // console.log(\"inside willUnMount, called when component expires\")\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   console.log(\"inside will receive props, will call when props changes, will not work if getDerivedStateFromProps method used\",this.props, nextProps)\n  //   // this.props = nextProps\n  //   // this.methods.engine(\"play\");\n  //   // this.methods.updateState(\"updateCounter\",nextProps.updateCounter);\n  // }\n  shouldComponentUpdate(nextProps, nextState){\n    //trigger when\n    // return a boolean value\n    // console.log(\"inside shouldComponentUpdate, will call before render if and only if update in state happen\",this.props, nextProps, this.state, nextState);\n    console.log(\"INSIDE shouldComponentUpdate\")\n    console.log(\"current props     = \", this.props)\n    console.log(\"current nextProps = \", nextProps)\n    console.log(\"current state     = \", this.state)\n    console.log(\"current nextState = \", nextState)\n    console.log(\"=============================================================\")\n\n    if(nextProps.updateCounter!==this.props.updateCounter){\n        //update happens\n        this.methods.updateHappens(nextProps,nextState);\n        return false\n    }else if(!nextProps.updateCounter || nextProps.updateCounter===this.props.updateCounter){\n        //for first update happen as well as if props are same\n        return true\n    }\n    return false\n  }\n  // componentDidUpdate(prevProps, prevState){\n  //   // console.log(\"inside didUpdate call after render if an only if state updated\", prevProps, prevState)\n  //   if(prevProps.updateCounter!=this.props.updateCounter){\n  //     // this.methods.updateState(\"updateCounter\",this.props.updateCounter)\n  //   }\n  // }\n  service = {\n    \"fetchPost\":(config)=>{\n      // return Buffer;\n      //retuning a promise\n      let o = this.apiProvider\n      return o.get(config).then((res) => {\n        return res\n      })\n    }\n  }\n  methods = {\n    \"engine\":(plug,data)=>{\n      let config = {}\n      config = {type:\"newsApi\"}\n      // config = {type:\"newsApiEntertainment\"}\n      this.methods.getData(config).then((result)=>{\n        // this.setState({\"buffer\":result})\n        data.buffer = result;\n        this.methods.updateState(\"\",data);\n      });\n    },\n    \"getData\":(config)=>{\n      return this.service.fetchPost(config).then(result => {\n        return result;\n      });\n    },\n    \"updateHappens\":(nextProps,nextState)=>{\n      let obj = {}\n      obj.updateCounter = nextProps.updateCounter\n      obj.buffer = {}\n      this.methods.engine(\"play\",obj)\n    },\n    \"updateState\":(key,data)=>{\n      if(!key){\n        this.setState(data)\n      }else{\n        let obj = {}\n        obj[key] = data\n        this.setState(obj)\n      }\n    }\n  }\n  //render\n  render(){\n    console.log(\"INSIDE RENDER\", this.state, this.props);\n    console.log(\"=============================================================\")\n    return(\n      <div className=\"news-board\">\n        {this.state.buffer.articles.map((o,i) => {\n          return <Card  key={i} article={o}/>\n        })}\n      </div>\n    )\n  }\n}\n\nexport default NewsBox\n","import React , {Component} from 'react'\nimport './App.css'\nimport Nav from '../Nav/Nav'\nimport NoNetworkFound from '../NoNetworkFound/NoNetworkFound'\nimport NewsBox from '../NewsBox/NewsBox'\n// import FoodBox from \"../FoodBox/FoodBox\"\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      \"updateCounter\":0,\n      \"offline\": this.handleCheckOnline()\n    }\n  }\n  componentDidMount(){\n      window.addEventListener('scroll', this.handleScroll);\n  }\n  componentWillUnmount(){\n      window.removeEventListener('scroll', this.handleScroll);\n  }\n  handleCheckOnline = () => window.navigator.onLine\n  handleScroll = (event) =>{\n    if(!window.scrollY){\n      this.setState({\n        \"updateCounter\":this.state.updateCounter +1,\n        \"offline\": this.handleCheckOnline()\n      });\n    }\n  }\n  render(){\n    return(\n      <div className=\"App\">\n        <h1>Hitme.com {this.state.updateCounter}</h1>\n        <Nav/>\n        {this.state.offline?null:<NoNetworkFound/>}\n        <NewsBox updateCounter = {this.state.updateCounter}/>\n        {/*<FoodBox/>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Component/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}